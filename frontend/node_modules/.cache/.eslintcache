[{"/Users/francescoprimerano/Desktop/metamask-login/src/index.js":"1","/Users/francescoprimerano/Desktop/metamask-login/src/reportWebVitals.js":"2","/Users/francescoprimerano/Desktop/metamask-login/src/App.js":"3","/Users/francescoprimerano/Desktop/metamask-login/src/Modal.js":"4"},{"size":500,"mtime":1629327142007,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1629327142009,"results":"7","hashOfConfig":"6"},{"size":4962,"mtime":1629442971021,"results":"8","hashOfConfig":"6"},{"size":1088,"mtime":1629395668110,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"yikrwt",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/francescoprimerano/Desktop/metamask-login/src/index.js",[],["20","21"],"/Users/francescoprimerano/Desktop/metamask-login/src/reportWebVitals.js",[],"/Users/francescoprimerano/Desktop/metamask-login/src/App.js",["22","23","24","25"],"import { useState, useCallback } from \"react\";\nimport \"bulma/css/bulma.min.css\";\nimport {\n  Container,\n  Heading,\n  Content,\n  Button,\n  Image,\n} from \"react-bulma-components\";\nimport Hero from \"react-bulma-components/esm/components/hero\";\nimport Footer from \"react-bulma-components/cjs/components/footer\";\nimport logo from \"./metamask.svg\";\nimport Web3 from \"web3\";\nimport Modal from \"./Modal\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [ethAddress, setEthAddress] = useState(\"\");\n  const [fieldsModal, setFieldsModal] = useState(undefined);\n\n  let web3 = new Web3(Web3.givenProvider);\n  const hasMetamask = () => {\n    const provider = web3.currentProvider;\n    if (provider && provider === window.ethereum && provider.isMetaMask) {\n      console.log(\"MetaMask is installed!\");\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /*\n  const handlerClik =  useCallback(async(e) => {\n    e.preventDefault();\n    if (hasMetamask()) {\n      console.log(\"OK METAMASK\");\n      console.log(web3.eth.accounts[0]);\n      const accounts = await web3.eth.getAccounts()\n      console.log(accounts[0])\n      web3.eth.personal\n        .sign(\n          web3.utils.utf8ToHex(\"Hello world\"),\n          \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n          \"test password!\"\n        )\n        .then(console.log);\n    } else {\n      setFieldsModal({\n        success: \"false\",\n        danger: \"true\",\n        title: \"No Metamask Extension Founded\",\n        body: \"Please install Metamask extension\",\n        show: \"true\",\n        btnType: \"danger\",\n      });\n    }\n  }, []);\n  */\n\n  const handlerClik = useCallback(async (e) => {\n    e.preventDefault();\n    if (hasMetamask()) {\n      const accounts = await web3.eth.getAccounts()\n\n      // equivalente di web3.eth.personal.sign\n      // web3.eth.personal.sign chiama questa fx\n      window.ethereum.sendAsync(\n        {\n          method: 'personal_sign',\n          params: [web3.utils.utf8ToHex('Hello world'), accounts[0]],\n          from: accounts[0]\n        },\n        (_err, { result }) => (_err ? console.error(_err) : console.log(result))\n      )\n\n      /*web3.eth.personal\n        .sign(\n          web3.utils.utf8ToHex(\"Hello world\"),\n          accounts[0]\n        )\n        .then(console.log);*/\n    } else {\n      setFieldsModal({\n        success: \"false\",\n        danger: \"true\",\n        title: \"No Metamask Extension Founded\",\n        body: \"Please install Metamask extension\",\n        show: \"true\",\n        btnType: \"danger\",\n      });\n    }\n  }, [hasMetamask, web3.eth, web3.utils]);\n\n  console.log(\"A\", fieldsModal);\n\n  return (\n    <div>\n      {fieldsModal !== undefined && (\n        <Modal setFieldsModal={setFieldsModal} fieldsModal={fieldsModal} />\n      )}\n      <Hero size=\"fullheight\">\n        <Hero.Header backgroundColor=\"primary\">\n          <Container\n            my={5}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Image src={logo} size={128} />\n            <Heading textColor={\"white\"}>Decentralized Login</Heading>\n            <Heading textColor=\"grey\" subtitle size={3}>\n              Simple Login Demo with MetaMask\n            </Heading>\n          </Container>\n        </Hero.Header>\n        <Hero.Body>\n          <Container display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Content>\n              <Button\n                size=\"medium\"\n                loading={isLoading}\n                rounded=\"true\"\n                fullwidth=\"true\"\n                color=\"warning\"\n                onClick={handlerClik}\n              >\n                Login with MetaMask\n              </Button>\n            </Content>\n          </Container>\n        </Hero.Body>\n        <Hero.Footer>\n          <Footer>\n            <Container>\n              <Content style={{ textAlign: \"center\" }}>\n                <p>\n                  <strong>Decentralized Login Demo</strong> by{\" \"}\n                  <a\n                    href=\"https://www.francescoprimerano.it\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    Francesco Primerano\n                  </a>\n                  . The source code is licensed under\n                  <a href=\"http://opensource.org/licenses/mit-license.php\">\n                    {\" \"}\n                    MIT\n                  </a>\n                </p>\n                <p>\n                  The repository of this project is avaiable on{\" \"}\n                  <a\n                    href=\"https://github.com/pf55351/dencentralizedLogin\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    github\n                  </a>\n                </p>\n              </Content>\n            </Container>\n          </Footer>\n        </Hero.Footer>\n      </Hero>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/francescoprimerano/Desktop/metamask-login/src/Modal.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":17,"column":21,"nodeType":"32","messageId":"33","endLine":17,"endColumn":33},{"ruleId":"30","severity":1,"message":"34","line":18,"column":10,"nodeType":"32","messageId":"33","endLine":18,"endColumn":20},{"ruleId":"30","severity":1,"message":"35","line":18,"column":22,"nodeType":"32","messageId":"33","endLine":18,"endColumn":35},{"ruleId":"36","severity":1,"message":"37","line":22,"column":9,"nodeType":"38","endLine":30,"endColumn":4},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setIsLoading' is assigned a value but never used.","Identifier","unusedVar","'ethAddress' is assigned a value but never used.","'setEthAddress' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'hasMetamask' function makes the dependencies of useCallback Hook (at line 92) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'hasMetamask' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]