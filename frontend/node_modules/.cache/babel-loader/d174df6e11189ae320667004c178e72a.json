{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\n\nvar DropdownItem = function DropdownItem(_ref) {\n  var active = _ref.active,\n      children = _ref.children,\n      value = _ref.value,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"active\", \"children\", \"value\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({\n    title: value\n  }, props, {\n    role: \"presentation\",\n    className: classnames(className, 'dropdown-item', {\n      'is-active': active\n    })\n  }), children);\n};\n\nDropdownItem.defaultProps = {};\nexport default DropdownItem;","map":{"version":3,"sources":["../../../../src/components/dropdown/components/item.js"],"names":["DropdownItem","active","children","value","className","props","classnames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,OAAA,MAAA,eAAA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAsD;AAAA,MAAnDC,MAAmD,GAAA,IAAA,CAAnDA,MAAmD;AAAA,MAA3CC,QAA2C,GAAA,IAAA,CAA3CA,QAA2C;AAAA,MAAjCC,KAAiC,GAAA,IAAA,CAAjCA,KAAiC;AAAA,MAA1BC,SAA0B,GAAA,IAAA,CAA1BA,SAA0B;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,WAAA,CAAA,CAAA;;AACzE,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAEF;AADT,GAAA,EAAA,KAAA,EAAA;AAGE,IAAA,IAAI,EAHN,cAAA;AAIE,IAAA,SAAS,EAAEG,UAAU,CAAA,SAAA,EAAA,eAAA,EAA6B;AAChD,mBAAaL;AADmC,KAA7B;AAJvB,GAAA,CAAA,EADF,QACE,CADF;AADF,CAAA;;AA+BAD,YAAY,CAAZA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,YAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\n\nconst DropdownItem = ({ active, children, value, className, ...props }) => {\n  return (\n    <Element\n      title={value}\n      {...props}\n      role=\"presentation\"\n      className={classnames(className, 'dropdown-item', {\n        'is-active': active,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nDropdownItem.propTypes = {\n  /**\n   * Whether this dropdown item is currently selected.\n   * Shows a highlighted effect if true.\n   * Note that the effect only works when this item is rendered as an anchor\n   * (`<a>`).\n   */\n  active: PropTypes.bool,\n  /**\n   * The value this dropdown item holds. When this item is clicked,\n   * this value is passed to the onChange callback of `<Dropdown />`.\n   * The value is used to determine if this item is active or not.\n   */\n  value: PropTypes.any.isRequired,\n};\n\nDropdownItem.defaultProps = {};\n\nexport default DropdownItem;\n"]},"metadata":{},"sourceType":"module"}