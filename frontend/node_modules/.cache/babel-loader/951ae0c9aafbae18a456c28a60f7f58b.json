{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport useFieldContext from './field/context';\n\nvar Label = function Label(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"size\"]);\n\n  var context = useFieldContext();\n  var calculatedSize = size || context.size;\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('label', className, _defineProperty({}, \"is-\".concat(calculatedSize), calculatedSize))\n  }), children);\n};\n\nLabel.defaultProps = {\n  renderAs: 'label'\n};\nexport default Label;","map":{"version":3,"sources":["../../../../src/components/form/components/label.js"],"names":["Label","children","className","size","props","context","useFieldContext","calculatedSize","classnames","renderAs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,eAAA,MAAA,iBAAA;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAA,IAAA,EAA6C;AAAA,MAA1CC,QAA0C,GAAA,IAAA,CAA1CA,QAA0C;AAAA,MAAhCC,SAAgC,GAAA,IAAA,CAAhCA,SAAgC;AAAA,MAArBC,IAAqB,GAAA,IAAA,CAArBA,IAAqB;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,CAAA,CAAA;;AACzD,MAAMC,OAAO,GAAGC,eAAhB,EAAA;AACA,MAAMC,cAAc,GAAGJ,IAAI,IAAIE,OAAO,CAAtC,IAAA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEG,UAAU,CAAA,OAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,MAAA,MAAA,CAAA,cAAA,CAAA,EAAA,cAAA,CAAA;AAFvB,GAAA,CAAA,EADF,QACE,CADF;AAHF,CAAA;;AA2BAR,KAAK,CAALA,YAAAA,GAAqB;AACnBS,EAAAA,QAAQ,EAAE;AADS,CAArBT;AAIA,eAAA,KAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\nimport useFieldContext from './field/context';\n\nconst Label = ({ children, className, size, ...props }) => {\n  const context = useFieldContext();\n  const calculatedSize = size || context.size;\n  return (\n    <Element\n      {...props}\n      className={classnames('label', className, {\n        [`is-${calculatedSize}`]: calculatedSize,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nLabel.propTypes = {\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nLabel.defaultProps = {\n  renderAs: 'label',\n};\n\nexport default Label;\n"]},"metadata":{},"sourceType":"module"}