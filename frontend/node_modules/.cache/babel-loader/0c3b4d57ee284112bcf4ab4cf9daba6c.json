{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Block from './components/block';\nimport Header from './components/header';\nimport Icon from './components/icon';\nimport Tabs from './components/tabs';\nimport Element from '../element';\n\nvar Panel = function Panel(_ref) {\n  var color = _ref.color,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"color\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('panel', className, _defineProperty({}, \"is-\".concat(color), color))\n  }));\n};\n\nPanel.Header = Header;\nPanel.Tabs = Tabs;\nPanel.Block = Block;\nPanel.Icon = Icon;\nPanel.defaultProps = {\n  renderAs: 'nav'\n};\nexport default Panel;","map":{"version":3,"sources":["../../../src/components/panel/panel.js"],"names":["Panel","color","className","props","classnames","renderAs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,KAAA,MAAA,oBAAA;AACA,OAAA,MAAA,MAAA,qBAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AAEA,OAAA,OAAA,MAAA,YAAA;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAA,IAAA,EAAoC;AAAA,MAAjCC,KAAiC,GAAA,IAAA,CAAjCA,KAAiC;AAAA,MAA1BC,SAA0B,GAAA,IAAA,CAA1BA,SAA0B;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;;AAChD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,OAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,MAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AAFvB,GAAA,CAAA,CADF;AADF,CAAA;;AAWAJ,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AAEAA,KAAK,CAALA,IAAAA,GAAAA,IAAAA;AAEAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;AAEAA,KAAK,CAALA,IAAAA,GAAAA,IAAAA;AAuBAA,KAAK,CAALA,YAAAA,GAAqB;AACnBK,EAAAA,QAAQ,EAAE;AADS,CAArBL;AAIA,eAAA,KAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Block from './components/block';\nimport Header from './components/header';\nimport Icon from './components/icon';\nimport Tabs from './components/tabs';\n\nimport Element from '../element';\n\nconst Panel = ({ color, className, ...props }) => {\n  return (\n    <Element\n      {...props}\n      className={classnames('panel', className, {\n        [`is-${color}`]: color,\n      })}\n    />\n  );\n};\n\nPanel.Header = Header;\n\nPanel.Tabs = Tabs;\n\nPanel.Block = Block;\n\nPanel.Icon = Icon;\n\nPanel.propTypes = {\n  color: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nPanel.defaultProps = {\n  renderAs: 'nav',\n};\n\nexport default Panel;\n"]},"metadata":{},"sourceType":"module"}