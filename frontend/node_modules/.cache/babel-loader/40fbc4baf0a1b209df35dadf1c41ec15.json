{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\n\nvar Radio = function Radio(_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      disabled = _ref.disabled,\n      checked = _ref.checked,\n      value = _ref.value,\n      name = _ref.name,\n      children = _ref.children,\n      domRef = _ref.domRef,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"disabled\", \"checked\", \"value\", \"name\", \"children\", \"domRef\"]);\n\n  return /*#__PURE__*/React.createElement(Element, {\n    renderAs: \"label\",\n    domRef: domRef,\n    disabled: disabled,\n    className: classnames('radio', className),\n    style: style\n  }, /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    name: name,\n    checked: checked,\n    type: \"radio\",\n    value: value,\n    disabled: disabled\n  })), ' ', children);\n};\n\nRadio.defaultProps = {\n  renderAs: 'input'\n};\nexport default Radio;","map":{"version":3,"sources":["../../../../src/components/form/components/radio.js"],"names":["Radio","className","style","disabled","checked","value","name","children","domRef","props","classnames","renderAs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,OAAA,MAAA,eAAA;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAA,IAAA,EAUR;AAAA,MATJC,SASI,GAAA,IAAA,CATJA,SASI;AAAA,MARJC,KAQI,GAAA,IAAA,CARJA,KAQI;AAAA,MAPJC,QAOI,GAAA,IAAA,CAPJA,QAOI;AAAA,MANJC,OAMI,GAAA,IAAA,CANJA,OAMI;AAAA,MALJC,KAKI,GAAA,IAAA,CALJA,KAKI;AAAA,MAJJC,IAII,GAAA,IAAA,CAJJA,IAII;AAAA,MAHJC,QAGI,GAAA,IAAA,CAHJA,QAGI;AAAA,MAFJC,MAEI,GAAA,IAAA,CAFJA,MAEI;AAAA,MADDC,KACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,QAAA,CAAA,CAAA;;AACJ,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,QAAQ,EADV,OAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,QAAQ,EAHV,QAAA;AAIE,IAAA,SAAS,EAAEC,UAAU,CAAA,OAAA,EAJvB,SAIuB,CAJvB;AAKE,IAAA,KAAK,EAAER;AALT,GAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,IAAI,EAFN,IAAA;AAGE,IAAA,OAAO,EAHT,OAAA;AAIE,IAAA,IAAI,EAJN,OAAA;AAKE,IAAA,KAAK,EALP,KAAA;AAME,IAAA,QAAQ,EAAEC;AANZ,GAAA,CAAA,CAPF,EAAA,GAAA,EADF,QACE,CADF;AAXF,CAAA;;AA8DAH,KAAK,CAALA,YAAAA,GAAqB;AACnBW,EAAAA,QAAQ,EAAE;AADS,CAArBX;AAIA,eAAA,KAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\n\nconst Radio = ({\n  className,\n  style,\n  disabled,\n  checked,\n  value,\n  name,\n  children,\n  domRef,\n  ...props\n}) => {\n  return (\n    <Element\n      renderAs=\"label\"\n      domRef={domRef}\n      disabled={disabled}\n      className={classnames('radio', className)}\n      style={style}\n    >\n      <Element\n        {...props}\n        name={name}\n        checked={checked}\n        type=\"radio\"\n        value={value}\n        disabled={disabled}\n      />{' '}\n      {children}\n    </Element>\n  );\n};\n\nRadio.propTypes = {\n  /**\n   * The name of the input field.\n   * Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n  /**\n   * React style object for `Form.Radio`\n   */\n  style: PropTypes.shape({}),\n  /**\n   * Whether this radio button is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Whether this radio button is checked,\n   */\n  checked: PropTypes.bool,\n  /**\n   * The associated value of this radio button.\n   * You can retrieve this value in the onChange handler of this component.\n   */\n  value: PropTypes.string,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nRadio.defaultProps = {\n  renderAs: 'input',\n};\n\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}