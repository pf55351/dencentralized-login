{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../../element';\nimport useFieldContext from './context';\n\nvar FieldLabel = function FieldLabel(_ref) {\n  var className = _ref.className,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"className\", \"size\"]);\n\n  var context = useFieldContext();\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('field-label', className, _defineProperty({}, \"is-\".concat(size), size || context.size))\n  }));\n};\n\nFieldLabel.defaultProps = {};\nexport default FieldLabel;","map":{"version":3,"sources":["../../../../../src/components/form/components/field/field-label.js"],"names":["FieldLabel","className","size","props","context","useFieldContext","classnames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,OAAA,MAAA,kBAAA;AACA,OAAA,eAAA,MAAA,WAAA;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAmC;AAAA,MAAhCC,SAAgC,GAAA,IAAA,CAAhCA,SAAgC;AAAA,MAArBC,IAAqB,GAAA,IAAA,CAArBA,IAAqB;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,MAAA,CAAA,CAAA;;AACpD,MAAMC,OAAO,GAAGC,eAAhB,EAAA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,aAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,MAAA,MAAA,CAAA,IAAA,CAAA,EACHJ,IAAI,IAAIE,OAAO,CADZ,IAAA,CAAA;AAFvB,GAAA,CAAA,CADF;AAFF,CAAA;;AAgBAJ,UAAU,CAAVA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,UAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../../element';\nimport useFieldContext from './context';\n\nconst FieldLabel = ({ className, size, ...props }) => {\n  const context = useFieldContext();\n  return (\n    <Element\n      {...props}\n      className={classnames('field-label', className, {\n        [`is-${size}`]: size || context.size,\n      })}\n    />\n  );\n};\n\nFieldLabel.propTypes = {\n  size: PropTypes.oneOf(['small', 'normal', 'medium', 'large']),\n};\n\nFieldLabel.defaultProps = {};\n\nexport default FieldLabel;\n"]},"metadata":{},"sourceType":"module"}