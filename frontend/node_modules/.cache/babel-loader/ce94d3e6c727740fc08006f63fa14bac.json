{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport { normalizeAlign } from '../../../services/normalizer';\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var _classnames;\n\n  var className = _ref.className,\n      hasAddons = _ref.hasAddons,\n      align = _ref.align,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"className\", \"hasAddons\", \"align\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('buttons', className, (_classnames = {\n      'has-addons': hasAddons\n    }, _defineProperty(_classnames, \"is-\".concat([normalizeAlign(align)]), align), _defineProperty(_classnames, \"are-\".concat(size), size), _classnames))\n  }));\n};\n\nButtonGroup.defaultProps = {\n  renderAs: 'div'\n};\nexport default ButtonGroup;","map":{"version":3,"sources":["../../../../src/components/button/components/button-group.js"],"names":["ButtonGroup","className","hasAddons","align","size","props","classnames","normalizeAlign","renderAs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,SAAA,cAAA,QAAA,8BAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAqD;AAAA,MAAA,WAAA;;AAAA,MAAlDC,SAAkD,GAAA,IAAA,CAAlDA,SAAkD;AAAA,MAAvCC,SAAuC,GAAA,IAAA,CAAvCA,SAAuC;AAAA,MAA5BC,KAA4B,GAAA,IAAA,CAA5BA,KAA4B;AAAA,MAArBC,IAAqB,GAAA,IAAA,CAArBA,IAAqB;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;;AACvE,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAA,SAAA,GAAA,WAAA,GAAA;AACnB,oBAAcJ;AADK,KAAA,EAAA,eAAA,CAAA,WAAA,EAAA,MAAA,MAAA,CAEZ,CAACK,cAAc,CAFH,KAEG,CAAf,CAFY,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,OAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,WAAA;AAFvB,GAAA,CAAA,CADF;AADF,CAAA;;AA8BAP,WAAW,CAAXA,YAAAA,GAA2B;AACzBQ,EAAAA,QAAQ,EAAE;AADe,CAA3BR;AAIA,eAAA,WAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport { normalizeAlign } from '../../../services/normalizer';\n\nconst ButtonGroup = ({ className, hasAddons, align, size, ...props }) => {\n  return (\n    <Element\n      {...props}\n      className={classnames('buttons', className, {\n        'has-addons': hasAddons,\n        [`is-${[normalizeAlign(align)]}`]: align,\n        [`are-${size}`]: size,\n      })}\n    />\n  );\n};\n\nButtonGroup.propTypes = {\n  hasAddons: PropTypes.bool,\n  /**\n   * The size of *all* the buttons in the group.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Align of the group. By default, it is left-aligned.\n   */\n  align: PropTypes.oneOf(['center', 'right']),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nButtonGroup.defaultProps = {\n  renderAs: 'div',\n};\n\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}