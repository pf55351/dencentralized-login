{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../element';\n\nvar Container = function Container(_ref) {\n  var children = _ref.children,\n      max = _ref.max,\n      breakpoint = _ref.breakpoint,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"children\", \"max\", \"breakpoint\", \"className\"]);\n\n  var canSetMax = ['desktop', 'widescreen'].includes(breakpoint);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('container', className, _defineProperty({}, \"is-\".concat(canSetMax && max ? 'max-' : '').concat(breakpoint), breakpoint))\n  }), children);\n};\n\nContainer.defaultProps = {};\nexport default Container;","map":{"version":3,"sources":["../../../src/components/container/container.js"],"names":["Container","children","max","breakpoint","className","props","canSetMax","classnames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,OAAA,MAAA,YAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAwD;AAAA,MAArDC,QAAqD,GAAA,IAAA,CAArDA,QAAqD;AAAA,MAA3CC,GAA2C,GAAA,IAAA,CAA3CA,GAA2C;AAAA,MAAtCC,UAAsC,GAAA,IAAA,CAAtCA,UAAsC;AAAA,MAA1BC,SAA0B,GAAA,IAAA,CAA1BA,SAA0B;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,KAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;;AACxE,MAAMC,SAAS,GAAG,CAAA,SAAA,EAAA,YAAA,EAAA,QAAA,CAAlB,UAAkB,CAAlB;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,WAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,MAAA,MAAA,CACZD,SAAS,IAATA,GAAAA,GAAAA,MAAAA,GADY,EAAA,EAAA,MAAA,CAAA,UAAA,CAAA,EAAA,UAAA,CAAA;AAFvB,GAAA,CAAA,EADF,QACE,CADF;AAFF,CAAA;;AAgCAN,SAAS,CAATA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,SAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../element';\n\nconst Container = ({ children, max, breakpoint, className, ...props }) => {\n  const canSetMax = ['desktop', 'widescreen'].includes(breakpoint);\n  return (\n    <Element\n      {...props}\n      className={classnames('container', className, {\n        [`is-${canSetMax && max ? 'max-' : ''}${breakpoint}`]: breakpoint,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nContainer.propTypes = {\n  /**\n   * Specifies the breakpoint at which the container will stop being fullwidth.\n   */\n  breakpoint: PropTypes.oneOf([\n    'mobile',\n    'tablet',\n    'desktop',\n    'widescreen',\n    'fullhd',\n    'fluid',\n  ]),\n  /**\n   * Only work for `desktop`  and `widescreen` breakpoints, Check the [bulma documentation](https://bulma.io/documentation/layout/container/#overview)\n   */\n  max: PropTypes.bool,\n};\n\nContainer.defaultProps = {};\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}